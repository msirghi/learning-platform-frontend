// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuthContainer component should match the snapshot 1`] = `
<withI18nextTranslation(AuthContainer)>
  <AuthContainer
    i18n={Object {}}
    t={[Function]}
    tReady={false}
  >
    <WithStyles(ForwardRef(Grid))
      container={true}
      justify="center"
    >
      <ForwardRef(Grid)
        classes={
          Object {
            "align-content-xs-center": "MuiGrid-align-content-xs-center",
            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
            "align-items-xs-center": "MuiGrid-align-items-xs-center",
            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
            "container": "MuiGrid-container",
            "direction-xs-column": "MuiGrid-direction-xs-column",
            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
            "grid-lg-1": "MuiGrid-grid-lg-1",
            "grid-lg-10": "MuiGrid-grid-lg-10",
            "grid-lg-11": "MuiGrid-grid-lg-11",
            "grid-lg-12": "MuiGrid-grid-lg-12",
            "grid-lg-2": "MuiGrid-grid-lg-2",
            "grid-lg-3": "MuiGrid-grid-lg-3",
            "grid-lg-4": "MuiGrid-grid-lg-4",
            "grid-lg-5": "MuiGrid-grid-lg-5",
            "grid-lg-6": "MuiGrid-grid-lg-6",
            "grid-lg-7": "MuiGrid-grid-lg-7",
            "grid-lg-8": "MuiGrid-grid-lg-8",
            "grid-lg-9": "MuiGrid-grid-lg-9",
            "grid-lg-auto": "MuiGrid-grid-lg-auto",
            "grid-lg-true": "MuiGrid-grid-lg-true",
            "grid-md-1": "MuiGrid-grid-md-1",
            "grid-md-10": "MuiGrid-grid-md-10",
            "grid-md-11": "MuiGrid-grid-md-11",
            "grid-md-12": "MuiGrid-grid-md-12",
            "grid-md-2": "MuiGrid-grid-md-2",
            "grid-md-3": "MuiGrid-grid-md-3",
            "grid-md-4": "MuiGrid-grid-md-4",
            "grid-md-5": "MuiGrid-grid-md-5",
            "grid-md-6": "MuiGrid-grid-md-6",
            "grid-md-7": "MuiGrid-grid-md-7",
            "grid-md-8": "MuiGrid-grid-md-8",
            "grid-md-9": "MuiGrid-grid-md-9",
            "grid-md-auto": "MuiGrid-grid-md-auto",
            "grid-md-true": "MuiGrid-grid-md-true",
            "grid-sm-1": "MuiGrid-grid-sm-1",
            "grid-sm-10": "MuiGrid-grid-sm-10",
            "grid-sm-11": "MuiGrid-grid-sm-11",
            "grid-sm-12": "MuiGrid-grid-sm-12",
            "grid-sm-2": "MuiGrid-grid-sm-2",
            "grid-sm-3": "MuiGrid-grid-sm-3",
            "grid-sm-4": "MuiGrid-grid-sm-4",
            "grid-sm-5": "MuiGrid-grid-sm-5",
            "grid-sm-6": "MuiGrid-grid-sm-6",
            "grid-sm-7": "MuiGrid-grid-sm-7",
            "grid-sm-8": "MuiGrid-grid-sm-8",
            "grid-sm-9": "MuiGrid-grid-sm-9",
            "grid-sm-auto": "MuiGrid-grid-sm-auto",
            "grid-sm-true": "MuiGrid-grid-sm-true",
            "grid-xl-1": "MuiGrid-grid-xl-1",
            "grid-xl-10": "MuiGrid-grid-xl-10",
            "grid-xl-11": "MuiGrid-grid-xl-11",
            "grid-xl-12": "MuiGrid-grid-xl-12",
            "grid-xl-2": "MuiGrid-grid-xl-2",
            "grid-xl-3": "MuiGrid-grid-xl-3",
            "grid-xl-4": "MuiGrid-grid-xl-4",
            "grid-xl-5": "MuiGrid-grid-xl-5",
            "grid-xl-6": "MuiGrid-grid-xl-6",
            "grid-xl-7": "MuiGrid-grid-xl-7",
            "grid-xl-8": "MuiGrid-grid-xl-8",
            "grid-xl-9": "MuiGrid-grid-xl-9",
            "grid-xl-auto": "MuiGrid-grid-xl-auto",
            "grid-xl-true": "MuiGrid-grid-xl-true",
            "grid-xs-1": "MuiGrid-grid-xs-1",
            "grid-xs-10": "MuiGrid-grid-xs-10",
            "grid-xs-11": "MuiGrid-grid-xs-11",
            "grid-xs-12": "MuiGrid-grid-xs-12",
            "grid-xs-2": "MuiGrid-grid-xs-2",
            "grid-xs-3": "MuiGrid-grid-xs-3",
            "grid-xs-4": "MuiGrid-grid-xs-4",
            "grid-xs-5": "MuiGrid-grid-xs-5",
            "grid-xs-6": "MuiGrid-grid-xs-6",
            "grid-xs-7": "MuiGrid-grid-xs-7",
            "grid-xs-8": "MuiGrid-grid-xs-8",
            "grid-xs-9": "MuiGrid-grid-xs-9",
            "grid-xs-auto": "MuiGrid-grid-xs-auto",
            "grid-xs-true": "MuiGrid-grid-xs-true",
            "item": "MuiGrid-item",
            "justify-xs-center": "MuiGrid-justify-xs-center",
            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
            "root": "MuiGrid-root",
            "spacing-xs-1": "MuiGrid-spacing-xs-1",
            "spacing-xs-10": "MuiGrid-spacing-xs-10",
            "spacing-xs-2": "MuiGrid-spacing-xs-2",
            "spacing-xs-3": "MuiGrid-spacing-xs-3",
            "spacing-xs-4": "MuiGrid-spacing-xs-4",
            "spacing-xs-5": "MuiGrid-spacing-xs-5",
            "spacing-xs-6": "MuiGrid-spacing-xs-6",
            "spacing-xs-7": "MuiGrid-spacing-xs-7",
            "spacing-xs-8": "MuiGrid-spacing-xs-8",
            "spacing-xs-9": "MuiGrid-spacing-xs-9",
            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
            "zeroMinWidth": "MuiGrid-zeroMinWidth",
          }
        }
        container={true}
        justify="center"
      >
        <div
          className="MuiGrid-root MuiGrid-container MuiGrid-justify-xs-center"
        >
          <div
            className="authContainer"
          >
            <AuthHeader
              activeTab={0}
              onTabChange={[Function]}
            >
              <div
                className="authHeader"
              >
                <div
                  className="false tab registerTab"
                  onClick={[Function]}
                >
                  <span>
                    auth:registerTitle
                  </span>
                </div>
                <div
                  className="inactiveTab tab loginTab"
                  onClick={[Function]}
                >
                  <span>
                    auth:loginTitle
                  </span>
                </div>
              </div>
            </AuthHeader>
            <div>
              <WithStyles(ForwardRef(Grid))
                container={true}
                justify="center"
              >
                <ForwardRef(Grid)
                  classes={
                    Object {
                      "align-content-xs-center": "MuiGrid-align-content-xs-center",
                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                      "align-items-xs-center": "MuiGrid-align-items-xs-center",
                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                      "container": "MuiGrid-container",
                      "direction-xs-column": "MuiGrid-direction-xs-column",
                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                      "grid-lg-1": "MuiGrid-grid-lg-1",
                      "grid-lg-10": "MuiGrid-grid-lg-10",
                      "grid-lg-11": "MuiGrid-grid-lg-11",
                      "grid-lg-12": "MuiGrid-grid-lg-12",
                      "grid-lg-2": "MuiGrid-grid-lg-2",
                      "grid-lg-3": "MuiGrid-grid-lg-3",
                      "grid-lg-4": "MuiGrid-grid-lg-4",
                      "grid-lg-5": "MuiGrid-grid-lg-5",
                      "grid-lg-6": "MuiGrid-grid-lg-6",
                      "grid-lg-7": "MuiGrid-grid-lg-7",
                      "grid-lg-8": "MuiGrid-grid-lg-8",
                      "grid-lg-9": "MuiGrid-grid-lg-9",
                      "grid-lg-auto": "MuiGrid-grid-lg-auto",
                      "grid-lg-true": "MuiGrid-grid-lg-true",
                      "grid-md-1": "MuiGrid-grid-md-1",
                      "grid-md-10": "MuiGrid-grid-md-10",
                      "grid-md-11": "MuiGrid-grid-md-11",
                      "grid-md-12": "MuiGrid-grid-md-12",
                      "grid-md-2": "MuiGrid-grid-md-2",
                      "grid-md-3": "MuiGrid-grid-md-3",
                      "grid-md-4": "MuiGrid-grid-md-4",
                      "grid-md-5": "MuiGrid-grid-md-5",
                      "grid-md-6": "MuiGrid-grid-md-6",
                      "grid-md-7": "MuiGrid-grid-md-7",
                      "grid-md-8": "MuiGrid-grid-md-8",
                      "grid-md-9": "MuiGrid-grid-md-9",
                      "grid-md-auto": "MuiGrid-grid-md-auto",
                      "grid-md-true": "MuiGrid-grid-md-true",
                      "grid-sm-1": "MuiGrid-grid-sm-1",
                      "grid-sm-10": "MuiGrid-grid-sm-10",
                      "grid-sm-11": "MuiGrid-grid-sm-11",
                      "grid-sm-12": "MuiGrid-grid-sm-12",
                      "grid-sm-2": "MuiGrid-grid-sm-2",
                      "grid-sm-3": "MuiGrid-grid-sm-3",
                      "grid-sm-4": "MuiGrid-grid-sm-4",
                      "grid-sm-5": "MuiGrid-grid-sm-5",
                      "grid-sm-6": "MuiGrid-grid-sm-6",
                      "grid-sm-7": "MuiGrid-grid-sm-7",
                      "grid-sm-8": "MuiGrid-grid-sm-8",
                      "grid-sm-9": "MuiGrid-grid-sm-9",
                      "grid-sm-auto": "MuiGrid-grid-sm-auto",
                      "grid-sm-true": "MuiGrid-grid-sm-true",
                      "grid-xl-1": "MuiGrid-grid-xl-1",
                      "grid-xl-10": "MuiGrid-grid-xl-10",
                      "grid-xl-11": "MuiGrid-grid-xl-11",
                      "grid-xl-12": "MuiGrid-grid-xl-12",
                      "grid-xl-2": "MuiGrid-grid-xl-2",
                      "grid-xl-3": "MuiGrid-grid-xl-3",
                      "grid-xl-4": "MuiGrid-grid-xl-4",
                      "grid-xl-5": "MuiGrid-grid-xl-5",
                      "grid-xl-6": "MuiGrid-grid-xl-6",
                      "grid-xl-7": "MuiGrid-grid-xl-7",
                      "grid-xl-8": "MuiGrid-grid-xl-8",
                      "grid-xl-9": "MuiGrid-grid-xl-9",
                      "grid-xl-auto": "MuiGrid-grid-xl-auto",
                      "grid-xl-true": "MuiGrid-grid-xl-true",
                      "grid-xs-1": "MuiGrid-grid-xs-1",
                      "grid-xs-10": "MuiGrid-grid-xs-10",
                      "grid-xs-11": "MuiGrid-grid-xs-11",
                      "grid-xs-12": "MuiGrid-grid-xs-12",
                      "grid-xs-2": "MuiGrid-grid-xs-2",
                      "grid-xs-3": "MuiGrid-grid-xs-3",
                      "grid-xs-4": "MuiGrid-grid-xs-4",
                      "grid-xs-5": "MuiGrid-grid-xs-5",
                      "grid-xs-6": "MuiGrid-grid-xs-6",
                      "grid-xs-7": "MuiGrid-grid-xs-7",
                      "grid-xs-8": "MuiGrid-grid-xs-8",
                      "grid-xs-9": "MuiGrid-grid-xs-9",
                      "grid-xs-auto": "MuiGrid-grid-xs-auto",
                      "grid-xs-true": "MuiGrid-grid-xs-true",
                      "item": "MuiGrid-item",
                      "justify-xs-center": "MuiGrid-justify-xs-center",
                      "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                      "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                      "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                      "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                      "root": "MuiGrid-root",
                      "spacing-xs-1": "MuiGrid-spacing-xs-1",
                      "spacing-xs-10": "MuiGrid-spacing-xs-10",
                      "spacing-xs-2": "MuiGrid-spacing-xs-2",
                      "spacing-xs-3": "MuiGrid-spacing-xs-3",
                      "spacing-xs-4": "MuiGrid-spacing-xs-4",
                      "spacing-xs-5": "MuiGrid-spacing-xs-5",
                      "spacing-xs-6": "MuiGrid-spacing-xs-6",
                      "spacing-xs-7": "MuiGrid-spacing-xs-7",
                      "spacing-xs-8": "MuiGrid-spacing-xs-8",
                      "spacing-xs-9": "MuiGrid-spacing-xs-9",
                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                      "zeroMinWidth": "MuiGrid-zeroMinWidth",
                    }
                  }
                  container={true}
                  justify="center"
                >
                  <div
                    className="MuiGrid-root MuiGrid-container MuiGrid-justify-xs-center"
                  >
                    <WithStyles(ForwardRef(Grid))
                      item={true}
                      xs={10}
                    >
                      <ForwardRef(Grid)
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                            "container": "MuiGrid-container",
                            "direction-xs-column": "MuiGrid-direction-xs-column",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                            "grid-lg-1": "MuiGrid-grid-lg-1",
                            "grid-lg-10": "MuiGrid-grid-lg-10",
                            "grid-lg-11": "MuiGrid-grid-lg-11",
                            "grid-lg-12": "MuiGrid-grid-lg-12",
                            "grid-lg-2": "MuiGrid-grid-lg-2",
                            "grid-lg-3": "MuiGrid-grid-lg-3",
                            "grid-lg-4": "MuiGrid-grid-lg-4",
                            "grid-lg-5": "MuiGrid-grid-lg-5",
                            "grid-lg-6": "MuiGrid-grid-lg-6",
                            "grid-lg-7": "MuiGrid-grid-lg-7",
                            "grid-lg-8": "MuiGrid-grid-lg-8",
                            "grid-lg-9": "MuiGrid-grid-lg-9",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                            "grid-lg-true": "MuiGrid-grid-lg-true",
                            "grid-md-1": "MuiGrid-grid-md-1",
                            "grid-md-10": "MuiGrid-grid-md-10",
                            "grid-md-11": "MuiGrid-grid-md-11",
                            "grid-md-12": "MuiGrid-grid-md-12",
                            "grid-md-2": "MuiGrid-grid-md-2",
                            "grid-md-3": "MuiGrid-grid-md-3",
                            "grid-md-4": "MuiGrid-grid-md-4",
                            "grid-md-5": "MuiGrid-grid-md-5",
                            "grid-md-6": "MuiGrid-grid-md-6",
                            "grid-md-7": "MuiGrid-grid-md-7",
                            "grid-md-8": "MuiGrid-grid-md-8",
                            "grid-md-9": "MuiGrid-grid-md-9",
                            "grid-md-auto": "MuiGrid-grid-md-auto",
                            "grid-md-true": "MuiGrid-grid-md-true",
                            "grid-sm-1": "MuiGrid-grid-sm-1",
                            "grid-sm-10": "MuiGrid-grid-sm-10",
                            "grid-sm-11": "MuiGrid-grid-sm-11",
                            "grid-sm-12": "MuiGrid-grid-sm-12",
                            "grid-sm-2": "MuiGrid-grid-sm-2",
                            "grid-sm-3": "MuiGrid-grid-sm-3",
                            "grid-sm-4": "MuiGrid-grid-sm-4",
                            "grid-sm-5": "MuiGrid-grid-sm-5",
                            "grid-sm-6": "MuiGrid-grid-sm-6",
                            "grid-sm-7": "MuiGrid-grid-sm-7",
                            "grid-sm-8": "MuiGrid-grid-sm-8",
                            "grid-sm-9": "MuiGrid-grid-sm-9",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                            "grid-sm-true": "MuiGrid-grid-sm-true",
                            "grid-xl-1": "MuiGrid-grid-xl-1",
                            "grid-xl-10": "MuiGrid-grid-xl-10",
                            "grid-xl-11": "MuiGrid-grid-xl-11",
                            "grid-xl-12": "MuiGrid-grid-xl-12",
                            "grid-xl-2": "MuiGrid-grid-xl-2",
                            "grid-xl-3": "MuiGrid-grid-xl-3",
                            "grid-xl-4": "MuiGrid-grid-xl-4",
                            "grid-xl-5": "MuiGrid-grid-xl-5",
                            "grid-xl-6": "MuiGrid-grid-xl-6",
                            "grid-xl-7": "MuiGrid-grid-xl-7",
                            "grid-xl-8": "MuiGrid-grid-xl-8",
                            "grid-xl-9": "MuiGrid-grid-xl-9",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                            "grid-xl-true": "MuiGrid-grid-xl-true",
                            "grid-xs-1": "MuiGrid-grid-xs-1",
                            "grid-xs-10": "MuiGrid-grid-xs-10",
                            "grid-xs-11": "MuiGrid-grid-xs-11",
                            "grid-xs-12": "MuiGrid-grid-xs-12",
                            "grid-xs-2": "MuiGrid-grid-xs-2",
                            "grid-xs-3": "MuiGrid-grid-xs-3",
                            "grid-xs-4": "MuiGrid-grid-xs-4",
                            "grid-xs-5": "MuiGrid-grid-xs-5",
                            "grid-xs-6": "MuiGrid-grid-xs-6",
                            "grid-xs-7": "MuiGrid-grid-xs-7",
                            "grid-xs-8": "MuiGrid-grid-xs-8",
                            "grid-xs-9": "MuiGrid-grid-xs-9",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                            "grid-xs-true": "MuiGrid-grid-xs-true",
                            "item": "MuiGrid-item",
                            "justify-xs-center": "MuiGrid-justify-xs-center",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                            "root": "MuiGrid-root",
                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                          }
                        }
                        item={true}
                        xs={10}
                      >
                        <div
                          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-10"
                        >
                          <div
                            className="formDescription"
                          >
                            <WithStyles(ForwardRef(Typography))>
                              <ForwardRef(Typography)
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                              >
                                <p
                                  className="MuiTypography-root MuiTypography-body1"
                                >
                                  auth:registerFormDescription
                                </p>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </div>
                        </div>
                      </ForwardRef(Grid)>
                    </WithStyles(ForwardRef(Grid))>
                    <WithStyles(ForwardRef(Grid))
                      item={true}
                      xs={10}
                    >
                      <ForwardRef(Grid)
                        classes={
                          Object {
                            "align-content-xs-center": "MuiGrid-align-content-xs-center",
                            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                            "align-items-xs-center": "MuiGrid-align-items-xs-center",
                            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                            "container": "MuiGrid-container",
                            "direction-xs-column": "MuiGrid-direction-xs-column",
                            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                            "grid-lg-1": "MuiGrid-grid-lg-1",
                            "grid-lg-10": "MuiGrid-grid-lg-10",
                            "grid-lg-11": "MuiGrid-grid-lg-11",
                            "grid-lg-12": "MuiGrid-grid-lg-12",
                            "grid-lg-2": "MuiGrid-grid-lg-2",
                            "grid-lg-3": "MuiGrid-grid-lg-3",
                            "grid-lg-4": "MuiGrid-grid-lg-4",
                            "grid-lg-5": "MuiGrid-grid-lg-5",
                            "grid-lg-6": "MuiGrid-grid-lg-6",
                            "grid-lg-7": "MuiGrid-grid-lg-7",
                            "grid-lg-8": "MuiGrid-grid-lg-8",
                            "grid-lg-9": "MuiGrid-grid-lg-9",
                            "grid-lg-auto": "MuiGrid-grid-lg-auto",
                            "grid-lg-true": "MuiGrid-grid-lg-true",
                            "grid-md-1": "MuiGrid-grid-md-1",
                            "grid-md-10": "MuiGrid-grid-md-10",
                            "grid-md-11": "MuiGrid-grid-md-11",
                            "grid-md-12": "MuiGrid-grid-md-12",
                            "grid-md-2": "MuiGrid-grid-md-2",
                            "grid-md-3": "MuiGrid-grid-md-3",
                            "grid-md-4": "MuiGrid-grid-md-4",
                            "grid-md-5": "MuiGrid-grid-md-5",
                            "grid-md-6": "MuiGrid-grid-md-6",
                            "grid-md-7": "MuiGrid-grid-md-7",
                            "grid-md-8": "MuiGrid-grid-md-8",
                            "grid-md-9": "MuiGrid-grid-md-9",
                            "grid-md-auto": "MuiGrid-grid-md-auto",
                            "grid-md-true": "MuiGrid-grid-md-true",
                            "grid-sm-1": "MuiGrid-grid-sm-1",
                            "grid-sm-10": "MuiGrid-grid-sm-10",
                            "grid-sm-11": "MuiGrid-grid-sm-11",
                            "grid-sm-12": "MuiGrid-grid-sm-12",
                            "grid-sm-2": "MuiGrid-grid-sm-2",
                            "grid-sm-3": "MuiGrid-grid-sm-3",
                            "grid-sm-4": "MuiGrid-grid-sm-4",
                            "grid-sm-5": "MuiGrid-grid-sm-5",
                            "grid-sm-6": "MuiGrid-grid-sm-6",
                            "grid-sm-7": "MuiGrid-grid-sm-7",
                            "grid-sm-8": "MuiGrid-grid-sm-8",
                            "grid-sm-9": "MuiGrid-grid-sm-9",
                            "grid-sm-auto": "MuiGrid-grid-sm-auto",
                            "grid-sm-true": "MuiGrid-grid-sm-true",
                            "grid-xl-1": "MuiGrid-grid-xl-1",
                            "grid-xl-10": "MuiGrid-grid-xl-10",
                            "grid-xl-11": "MuiGrid-grid-xl-11",
                            "grid-xl-12": "MuiGrid-grid-xl-12",
                            "grid-xl-2": "MuiGrid-grid-xl-2",
                            "grid-xl-3": "MuiGrid-grid-xl-3",
                            "grid-xl-4": "MuiGrid-grid-xl-4",
                            "grid-xl-5": "MuiGrid-grid-xl-5",
                            "grid-xl-6": "MuiGrid-grid-xl-6",
                            "grid-xl-7": "MuiGrid-grid-xl-7",
                            "grid-xl-8": "MuiGrid-grid-xl-8",
                            "grid-xl-9": "MuiGrid-grid-xl-9",
                            "grid-xl-auto": "MuiGrid-grid-xl-auto",
                            "grid-xl-true": "MuiGrid-grid-xl-true",
                            "grid-xs-1": "MuiGrid-grid-xs-1",
                            "grid-xs-10": "MuiGrid-grid-xs-10",
                            "grid-xs-11": "MuiGrid-grid-xs-11",
                            "grid-xs-12": "MuiGrid-grid-xs-12",
                            "grid-xs-2": "MuiGrid-grid-xs-2",
                            "grid-xs-3": "MuiGrid-grid-xs-3",
                            "grid-xs-4": "MuiGrid-grid-xs-4",
                            "grid-xs-5": "MuiGrid-grid-xs-5",
                            "grid-xs-6": "MuiGrid-grid-xs-6",
                            "grid-xs-7": "MuiGrid-grid-xs-7",
                            "grid-xs-8": "MuiGrid-grid-xs-8",
                            "grid-xs-9": "MuiGrid-grid-xs-9",
                            "grid-xs-auto": "MuiGrid-grid-xs-auto",
                            "grid-xs-true": "MuiGrid-grid-xs-true",
                            "item": "MuiGrid-item",
                            "justify-xs-center": "MuiGrid-justify-xs-center",
                            "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                            "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                            "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                            "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                            "root": "MuiGrid-root",
                            "spacing-xs-1": "MuiGrid-spacing-xs-1",
                            "spacing-xs-10": "MuiGrid-spacing-xs-10",
                            "spacing-xs-2": "MuiGrid-spacing-xs-2",
                            "spacing-xs-3": "MuiGrid-spacing-xs-3",
                            "spacing-xs-4": "MuiGrid-spacing-xs-4",
                            "spacing-xs-5": "MuiGrid-spacing-xs-5",
                            "spacing-xs-6": "MuiGrid-spacing-xs-6",
                            "spacing-xs-7": "MuiGrid-spacing-xs-7",
                            "spacing-xs-8": "MuiGrid-spacing-xs-8",
                            "spacing-xs-9": "MuiGrid-spacing-xs-9",
                            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                            "zeroMinWidth": "MuiGrid-zeroMinWidth",
                          }
                        }
                        item={true}
                        xs={10}
                      >
                        <div
                          className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-10"
                        >
                          <RegisterForm>
                            <form
                              noValidate={true}
                              onSubmit={[Function]}
                            >
                              <WithStyles(ForwardRef(TextField))
                                data-test="email"
                                error={false}
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "data-testid": "email-field",
                                    "name": "email",
                                    "ref": [Function],
                                  }
                                }
                                label="auth:email"
                                margin="normal"
                                name="email"
                                variant="outlined"
                              >
                                <ForwardRef(TextField)
                                  classes={
                                    Object {
                                      "root": "MuiTextField-root",
                                    }
                                  }
                                  data-test="email"
                                  error={false}
                                  fullWidth={true}
                                  inputProps={
                                    Object {
                                      "data-testid": "email-field",
                                      "name": "email",
                                      "ref": [Function],
                                    }
                                  }
                                  label="auth:email"
                                  margin="normal"
                                  name="email"
                                  variant="outlined"
                                >
                                  <WithStyles(ForwardRef(FormControl))
                                    className="MuiTextField-root"
                                    color="primary"
                                    data-test="email"
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    margin="normal"
                                    required={false}
                                    variant="outlined"
                                  >
                                    <ForwardRef(FormControl)
                                      className="MuiTextField-root"
                                      classes={
                                        Object {
                                          "fullWidth": "MuiFormControl-fullWidth",
                                          "marginDense": "MuiFormControl-marginDense",
                                          "marginNormal": "MuiFormControl-marginNormal",
                                          "root": "MuiFormControl-root",
                                        }
                                      }
                                      color="primary"
                                      data-test="email"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      margin="normal"
                                      required={false}
                                      variant="outlined"
                                    >
                                      <div
                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                        data-test="email"
                                      >
                                        <WithStyles(ForwardRef(InputLabel))>
                                          <ForwardRef(InputLabel)
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated",
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "filled": "MuiInputLabel-filled",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInputLabel-formControl",
                                                "marginDense": "MuiInputLabel-marginDense",
                                                "outlined": "MuiInputLabel-outlined",
                                                "required": "Mui-required",
                                                "root": "MuiInputLabel-root",
                                                "shrink": "MuiInputLabel-shrink",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(FormLabel))
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "required": "Mui-required",
                                                }
                                              }
                                              data-shrink={false}
                                            >
                                              <ForwardRef(FormLabel)
                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "filled": "MuiFormLabel-filled",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "required": "Mui-required Mui-required",
                                                    "root": "MuiFormLabel-root",
                                                  }
                                                }
                                                data-shrink={false}
                                              >
                                                <label
                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                  data-shrink={false}
                                                >
                                                  auth:email
                                                </label>
                                              </ForwardRef(FormLabel)>
                                            </WithStyles(ForwardRef(FormLabel))>
                                          </ForwardRef(InputLabel)>
                                        </WithStyles(ForwardRef(InputLabel))>
                                        <WithStyles(ForwardRef(OutlinedInput))
                                          autoFocus={false}
                                          fullWidth={true}
                                          inputProps={
                                            Object {
                                              "data-testid": "email-field",
                                              "name": "email",
                                              "ref": [Function],
                                            }
                                          }
                                          label={
                                            <React.Fragment>
                                              auth:email
                                            </React.Fragment>
                                          }
                                          multiline={false}
                                          name="email"
                                        >
                                          <ForwardRef(OutlinedInput)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "input": "MuiOutlinedInput-input",
                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                "multiline": "MuiOutlinedInput-multiline",
                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                "root": "MuiOutlinedInput-root",
                                              }
                                            }
                                            fullWidth={true}
                                            inputProps={
                                              Object {
                                                "data-testid": "email-field",
                                                "name": "email",
                                                "ref": [Function],
                                              }
                                            }
                                            label={
                                              <React.Fragment>
                                                auth:email
                                              </React.Fragment>
                                            }
                                            multiline={false}
                                            name="email"
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "input": "MuiOutlinedInput-input",
                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                  "multiline": "MuiOutlinedInput-multiline",
                                                  "notchedOutline": null,
                                                  "root": "MuiOutlinedInput-root",
                                                }
                                              }
                                              fullWidth={true}
                                              inputComponent="input"
                                              inputProps={
                                                Object {
                                                  "data-testid": "email-field",
                                                  "name": "email",
                                                  "ref": [Function],
                                                }
                                              }
                                              multiline={false}
                                              name="email"
                                              renderSuffix={[Function]}
                                              type="text"
                                            >
                                              <ForwardRef(InputBase)
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                  }
                                                }
                                                fullWidth={true}
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "data-testid": "email-field",
                                                    "name": "email",
                                                    "ref": [Function],
                                                  }
                                                }
                                                multiline={false}
                                                name="email"
                                                renderSuffix={[Function]}
                                                type="text"
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                  onClick={[Function]}
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    autoFocus={false}
                                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                                    data-testid="email-field"
                                                    disabled={false}
                                                    name="email"
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={false}
                                                    type="text"
                                                  />
                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                    className="MuiOutlinedInput-notchedOutline"
                                                    label={
                                                      <React.Fragment>
                                                        auth:email
                                                      </React.Fragment>
                                                    }
                                                    labelWidth={0}
                                                    notched={false}
                                                  >
                                                    <ForwardRef(NotchedOutline)
                                                      className="MuiOutlinedInput-notchedOutline"
                                                      classes={
                                                        Object {
                                                          "legend": "PrivateNotchedOutline-legend-2",
                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-3",
                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-4",
                                                          "root": "PrivateNotchedOutline-root-1",
                                                        }
                                                      }
                                                      label={
                                                        <React.Fragment>
                                                          auth:email
                                                        </React.Fragment>
                                                      }
                                                      labelWidth={0}
                                                      notched={false}
                                                    >
                                                      <fieldset
                                                        aria-hidden={true}
                                                        className="PrivateNotchedOutline-root-1 MuiOutlinedInput-notchedOutline"
                                                      >
                                                        <legend
                                                          className="PrivateNotchedOutline-legendLabelled-3"
                                                        >
                                                          <span>
                                                            auth:email
                                                          </span>
                                                        </legend>
                                                      </fieldset>
                                                    </ForwardRef(NotchedOutline)>
                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(OutlinedInput)>
                                        </WithStyles(ForwardRef(OutlinedInput))>
                                      </div>
                                    </ForwardRef(FormControl)>
                                  </WithStyles(ForwardRef(FormControl))>
                                </ForwardRef(TextField)>
                              </WithStyles(ForwardRef(TextField))>
                              <WithStyles(ForwardRef(TextField))
                                error={false}
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "data-testid": "firstName-field",
                                    "ref": [Function],
                                  }
                                }
                                label="auth:firstName"
                                margin="normal"
                                name="firstName"
                                type="text"
                                variant="outlined"
                              >
                                <ForwardRef(TextField)
                                  classes={
                                    Object {
                                      "root": "MuiTextField-root",
                                    }
                                  }
                                  error={false}
                                  fullWidth={true}
                                  inputProps={
                                    Object {
                                      "data-testid": "firstName-field",
                                      "ref": [Function],
                                    }
                                  }
                                  label="auth:firstName"
                                  margin="normal"
                                  name="firstName"
                                  type="text"
                                  variant="outlined"
                                >
                                  <WithStyles(ForwardRef(FormControl))
                                    className="MuiTextField-root"
                                    color="primary"
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    margin="normal"
                                    required={false}
                                    variant="outlined"
                                  >
                                    <ForwardRef(FormControl)
                                      className="MuiTextField-root"
                                      classes={
                                        Object {
                                          "fullWidth": "MuiFormControl-fullWidth",
                                          "marginDense": "MuiFormControl-marginDense",
                                          "marginNormal": "MuiFormControl-marginNormal",
                                          "root": "MuiFormControl-root",
                                        }
                                      }
                                      color="primary"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      margin="normal"
                                      required={false}
                                      variant="outlined"
                                    >
                                      <div
                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                      >
                                        <WithStyles(ForwardRef(InputLabel))>
                                          <ForwardRef(InputLabel)
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated",
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "filled": "MuiInputLabel-filled",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInputLabel-formControl",
                                                "marginDense": "MuiInputLabel-marginDense",
                                                "outlined": "MuiInputLabel-outlined",
                                                "required": "Mui-required",
                                                "root": "MuiInputLabel-root",
                                                "shrink": "MuiInputLabel-shrink",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(FormLabel))
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "required": "Mui-required",
                                                }
                                              }
                                              data-shrink={false}
                                            >
                                              <ForwardRef(FormLabel)
                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "filled": "MuiFormLabel-filled",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "required": "Mui-required Mui-required",
                                                    "root": "MuiFormLabel-root",
                                                  }
                                                }
                                                data-shrink={false}
                                              >
                                                <label
                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                  data-shrink={false}
                                                >
                                                  auth:firstName
                                                </label>
                                              </ForwardRef(FormLabel)>
                                            </WithStyles(ForwardRef(FormLabel))>
                                          </ForwardRef(InputLabel)>
                                        </WithStyles(ForwardRef(InputLabel))>
                                        <WithStyles(ForwardRef(OutlinedInput))
                                          autoFocus={false}
                                          fullWidth={true}
                                          inputProps={
                                            Object {
                                              "data-testid": "firstName-field",
                                              "ref": [Function],
                                            }
                                          }
                                          label={
                                            <React.Fragment>
                                              auth:firstName
                                            </React.Fragment>
                                          }
                                          multiline={false}
                                          name="firstName"
                                          type="text"
                                        >
                                          <ForwardRef(OutlinedInput)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "input": "MuiOutlinedInput-input",
                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                "multiline": "MuiOutlinedInput-multiline",
                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                "root": "MuiOutlinedInput-root",
                                              }
                                            }
                                            fullWidth={true}
                                            inputProps={
                                              Object {
                                                "data-testid": "firstName-field",
                                                "ref": [Function],
                                              }
                                            }
                                            label={
                                              <React.Fragment>
                                                auth:firstName
                                              </React.Fragment>
                                            }
                                            multiline={false}
                                            name="firstName"
                                            type="text"
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "input": "MuiOutlinedInput-input",
                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                  "multiline": "MuiOutlinedInput-multiline",
                                                  "notchedOutline": null,
                                                  "root": "MuiOutlinedInput-root",
                                                }
                                              }
                                              fullWidth={true}
                                              inputComponent="input"
                                              inputProps={
                                                Object {
                                                  "data-testid": "firstName-field",
                                                  "ref": [Function],
                                                }
                                              }
                                              multiline={false}
                                              name="firstName"
                                              renderSuffix={[Function]}
                                              type="text"
                                            >
                                              <ForwardRef(InputBase)
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                  }
                                                }
                                                fullWidth={true}
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "data-testid": "firstName-field",
                                                    "ref": [Function],
                                                  }
                                                }
                                                multiline={false}
                                                name="firstName"
                                                renderSuffix={[Function]}
                                                type="text"
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                  onClick={[Function]}
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    autoFocus={false}
                                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                                    data-testid="firstName-field"
                                                    disabled={false}
                                                    name="firstName"
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={false}
                                                    type="text"
                                                  />
                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                    className="MuiOutlinedInput-notchedOutline"
                                                    label={
                                                      <React.Fragment>
                                                        auth:firstName
                                                      </React.Fragment>
                                                    }
                                                    labelWidth={0}
                                                    notched={false}
                                                  >
                                                    <ForwardRef(NotchedOutline)
                                                      className="MuiOutlinedInput-notchedOutline"
                                                      classes={
                                                        Object {
                                                          "legend": "PrivateNotchedOutline-legend-2",
                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-3",
                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-4",
                                                          "root": "PrivateNotchedOutline-root-1",
                                                        }
                                                      }
                                                      label={
                                                        <React.Fragment>
                                                          auth:firstName
                                                        </React.Fragment>
                                                      }
                                                      labelWidth={0}
                                                      notched={false}
                                                    >
                                                      <fieldset
                                                        aria-hidden={true}
                                                        className="PrivateNotchedOutline-root-1 MuiOutlinedInput-notchedOutline"
                                                      >
                                                        <legend
                                                          className="PrivateNotchedOutline-legendLabelled-3"
                                                        >
                                                          <span>
                                                            auth:firstName
                                                          </span>
                                                        </legend>
                                                      </fieldset>
                                                    </ForwardRef(NotchedOutline)>
                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(OutlinedInput)>
                                        </WithStyles(ForwardRef(OutlinedInput))>
                                      </div>
                                    </ForwardRef(FormControl)>
                                  </WithStyles(ForwardRef(FormControl))>
                                </ForwardRef(TextField)>
                              </WithStyles(ForwardRef(TextField))>
                              <WithStyles(ForwardRef(TextField))
                                error={false}
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "data-testid": "lastName-field",
                                    "ref": [Function],
                                  }
                                }
                                label="auth:lastName"
                                margin="normal"
                                name="lastName"
                                type="text"
                                variant="outlined"
                              >
                                <ForwardRef(TextField)
                                  classes={
                                    Object {
                                      "root": "MuiTextField-root",
                                    }
                                  }
                                  error={false}
                                  fullWidth={true}
                                  inputProps={
                                    Object {
                                      "data-testid": "lastName-field",
                                      "ref": [Function],
                                    }
                                  }
                                  label="auth:lastName"
                                  margin="normal"
                                  name="lastName"
                                  type="text"
                                  variant="outlined"
                                >
                                  <WithStyles(ForwardRef(FormControl))
                                    className="MuiTextField-root"
                                    color="primary"
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    margin="normal"
                                    required={false}
                                    variant="outlined"
                                  >
                                    <ForwardRef(FormControl)
                                      className="MuiTextField-root"
                                      classes={
                                        Object {
                                          "fullWidth": "MuiFormControl-fullWidth",
                                          "marginDense": "MuiFormControl-marginDense",
                                          "marginNormal": "MuiFormControl-marginNormal",
                                          "root": "MuiFormControl-root",
                                        }
                                      }
                                      color="primary"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      margin="normal"
                                      required={false}
                                      variant="outlined"
                                    >
                                      <div
                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                      >
                                        <WithStyles(ForwardRef(InputLabel))>
                                          <ForwardRef(InputLabel)
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated",
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "filled": "MuiInputLabel-filled",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInputLabel-formControl",
                                                "marginDense": "MuiInputLabel-marginDense",
                                                "outlined": "MuiInputLabel-outlined",
                                                "required": "Mui-required",
                                                "root": "MuiInputLabel-root",
                                                "shrink": "MuiInputLabel-shrink",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(FormLabel))
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "required": "Mui-required",
                                                }
                                              }
                                              data-shrink={false}
                                            >
                                              <ForwardRef(FormLabel)
                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "filled": "MuiFormLabel-filled",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "required": "Mui-required Mui-required",
                                                    "root": "MuiFormLabel-root",
                                                  }
                                                }
                                                data-shrink={false}
                                              >
                                                <label
                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                  data-shrink={false}
                                                >
                                                  auth:lastName
                                                </label>
                                              </ForwardRef(FormLabel)>
                                            </WithStyles(ForwardRef(FormLabel))>
                                          </ForwardRef(InputLabel)>
                                        </WithStyles(ForwardRef(InputLabel))>
                                        <WithStyles(ForwardRef(OutlinedInput))
                                          autoFocus={false}
                                          fullWidth={true}
                                          inputProps={
                                            Object {
                                              "data-testid": "lastName-field",
                                              "ref": [Function],
                                            }
                                          }
                                          label={
                                            <React.Fragment>
                                              auth:lastName
                                            </React.Fragment>
                                          }
                                          multiline={false}
                                          name="lastName"
                                          type="text"
                                        >
                                          <ForwardRef(OutlinedInput)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "input": "MuiOutlinedInput-input",
                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                "multiline": "MuiOutlinedInput-multiline",
                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                "root": "MuiOutlinedInput-root",
                                              }
                                            }
                                            fullWidth={true}
                                            inputProps={
                                              Object {
                                                "data-testid": "lastName-field",
                                                "ref": [Function],
                                              }
                                            }
                                            label={
                                              <React.Fragment>
                                                auth:lastName
                                              </React.Fragment>
                                            }
                                            multiline={false}
                                            name="lastName"
                                            type="text"
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "input": "MuiOutlinedInput-input",
                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                  "multiline": "MuiOutlinedInput-multiline",
                                                  "notchedOutline": null,
                                                  "root": "MuiOutlinedInput-root",
                                                }
                                              }
                                              fullWidth={true}
                                              inputComponent="input"
                                              inputProps={
                                                Object {
                                                  "data-testid": "lastName-field",
                                                  "ref": [Function],
                                                }
                                              }
                                              multiline={false}
                                              name="lastName"
                                              renderSuffix={[Function]}
                                              type="text"
                                            >
                                              <ForwardRef(InputBase)
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                  }
                                                }
                                                fullWidth={true}
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "data-testid": "lastName-field",
                                                    "ref": [Function],
                                                  }
                                                }
                                                multiline={false}
                                                name="lastName"
                                                renderSuffix={[Function]}
                                                type="text"
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                  onClick={[Function]}
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    autoFocus={false}
                                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                                    data-testid="lastName-field"
                                                    disabled={false}
                                                    name="lastName"
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={false}
                                                    type="text"
                                                  />
                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                    className="MuiOutlinedInput-notchedOutline"
                                                    label={
                                                      <React.Fragment>
                                                        auth:lastName
                                                      </React.Fragment>
                                                    }
                                                    labelWidth={0}
                                                    notched={false}
                                                  >
                                                    <ForwardRef(NotchedOutline)
                                                      className="MuiOutlinedInput-notchedOutline"
                                                      classes={
                                                        Object {
                                                          "legend": "PrivateNotchedOutline-legend-2",
                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-3",
                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-4",
                                                          "root": "PrivateNotchedOutline-root-1",
                                                        }
                                                      }
                                                      label={
                                                        <React.Fragment>
                                                          auth:lastName
                                                        </React.Fragment>
                                                      }
                                                      labelWidth={0}
                                                      notched={false}
                                                    >
                                                      <fieldset
                                                        aria-hidden={true}
                                                        className="PrivateNotchedOutline-root-1 MuiOutlinedInput-notchedOutline"
                                                      >
                                                        <legend
                                                          className="PrivateNotchedOutline-legendLabelled-3"
                                                        >
                                                          <span>
                                                            auth:lastName
                                                          </span>
                                                        </legend>
                                                      </fieldset>
                                                    </ForwardRef(NotchedOutline)>
                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(OutlinedInput)>
                                        </WithStyles(ForwardRef(OutlinedInput))>
                                      </div>
                                    </ForwardRef(FormControl)>
                                  </WithStyles(ForwardRef(FormControl))>
                                </ForwardRef(TextField)>
                              </WithStyles(ForwardRef(TextField))>
                              <WithStyles(ForwardRef(TextField))
                                error={false}
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "data-testid": "password-field",
                                    "ref": [Function],
                                  }
                                }
                                label="auth:password"
                                margin="normal"
                                name="password"
                                type="password"
                                variant="outlined"
                              >
                                <ForwardRef(TextField)
                                  classes={
                                    Object {
                                      "root": "MuiTextField-root",
                                    }
                                  }
                                  error={false}
                                  fullWidth={true}
                                  inputProps={
                                    Object {
                                      "data-testid": "password-field",
                                      "ref": [Function],
                                    }
                                  }
                                  label="auth:password"
                                  margin="normal"
                                  name="password"
                                  type="password"
                                  variant="outlined"
                                >
                                  <WithStyles(ForwardRef(FormControl))
                                    className="MuiTextField-root"
                                    color="primary"
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    margin="normal"
                                    required={false}
                                    variant="outlined"
                                  >
                                    <ForwardRef(FormControl)
                                      className="MuiTextField-root"
                                      classes={
                                        Object {
                                          "fullWidth": "MuiFormControl-fullWidth",
                                          "marginDense": "MuiFormControl-marginDense",
                                          "marginNormal": "MuiFormControl-marginNormal",
                                          "root": "MuiFormControl-root",
                                        }
                                      }
                                      color="primary"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      margin="normal"
                                      required={false}
                                      variant="outlined"
                                    >
                                      <div
                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                      >
                                        <WithStyles(ForwardRef(InputLabel))>
                                          <ForwardRef(InputLabel)
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated",
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "filled": "MuiInputLabel-filled",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInputLabel-formControl",
                                                "marginDense": "MuiInputLabel-marginDense",
                                                "outlined": "MuiInputLabel-outlined",
                                                "required": "Mui-required",
                                                "root": "MuiInputLabel-root",
                                                "shrink": "MuiInputLabel-shrink",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(FormLabel))
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "required": "Mui-required",
                                                }
                                              }
                                              data-shrink={false}
                                            >
                                              <ForwardRef(FormLabel)
                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "filled": "MuiFormLabel-filled",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "required": "Mui-required Mui-required",
                                                    "root": "MuiFormLabel-root",
                                                  }
                                                }
                                                data-shrink={false}
                                              >
                                                <label
                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                  data-shrink={false}
                                                >
                                                  auth:password
                                                </label>
                                              </ForwardRef(FormLabel)>
                                            </WithStyles(ForwardRef(FormLabel))>
                                          </ForwardRef(InputLabel)>
                                        </WithStyles(ForwardRef(InputLabel))>
                                        <WithStyles(ForwardRef(OutlinedInput))
                                          autoFocus={false}
                                          fullWidth={true}
                                          inputProps={
                                            Object {
                                              "data-testid": "password-field",
                                              "ref": [Function],
                                            }
                                          }
                                          label={
                                            <React.Fragment>
                                              auth:password
                                            </React.Fragment>
                                          }
                                          multiline={false}
                                          name="password"
                                          type="password"
                                        >
                                          <ForwardRef(OutlinedInput)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "input": "MuiOutlinedInput-input",
                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                "multiline": "MuiOutlinedInput-multiline",
                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                "root": "MuiOutlinedInput-root",
                                              }
                                            }
                                            fullWidth={true}
                                            inputProps={
                                              Object {
                                                "data-testid": "password-field",
                                                "ref": [Function],
                                              }
                                            }
                                            label={
                                              <React.Fragment>
                                                auth:password
                                              </React.Fragment>
                                            }
                                            multiline={false}
                                            name="password"
                                            type="password"
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "input": "MuiOutlinedInput-input",
                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                  "multiline": "MuiOutlinedInput-multiline",
                                                  "notchedOutline": null,
                                                  "root": "MuiOutlinedInput-root",
                                                }
                                              }
                                              fullWidth={true}
                                              inputComponent="input"
                                              inputProps={
                                                Object {
                                                  "data-testid": "password-field",
                                                  "ref": [Function],
                                                }
                                              }
                                              multiline={false}
                                              name="password"
                                              renderSuffix={[Function]}
                                              type="password"
                                            >
                                              <ForwardRef(InputBase)
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                  }
                                                }
                                                fullWidth={true}
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "data-testid": "password-field",
                                                    "ref": [Function],
                                                  }
                                                }
                                                multiline={false}
                                                name="password"
                                                renderSuffix={[Function]}
                                                type="password"
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                  onClick={[Function]}
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    autoFocus={false}
                                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                                    data-testid="password-field"
                                                    disabled={false}
                                                    name="password"
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={false}
                                                    type="password"
                                                  />
                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                    className="MuiOutlinedInput-notchedOutline"
                                                    label={
                                                      <React.Fragment>
                                                        auth:password
                                                      </React.Fragment>
                                                    }
                                                    labelWidth={0}
                                                    notched={false}
                                                  >
                                                    <ForwardRef(NotchedOutline)
                                                      className="MuiOutlinedInput-notchedOutline"
                                                      classes={
                                                        Object {
                                                          "legend": "PrivateNotchedOutline-legend-2",
                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-3",
                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-4",
                                                          "root": "PrivateNotchedOutline-root-1",
                                                        }
                                                      }
                                                      label={
                                                        <React.Fragment>
                                                          auth:password
                                                        </React.Fragment>
                                                      }
                                                      labelWidth={0}
                                                      notched={false}
                                                    >
                                                      <fieldset
                                                        aria-hidden={true}
                                                        className="PrivateNotchedOutline-root-1 MuiOutlinedInput-notchedOutline"
                                                      >
                                                        <legend
                                                          className="PrivateNotchedOutline-legendLabelled-3"
                                                        >
                                                          <span>
                                                            auth:password
                                                          </span>
                                                        </legend>
                                                      </fieldset>
                                                    </ForwardRef(NotchedOutline)>
                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(OutlinedInput)>
                                        </WithStyles(ForwardRef(OutlinedInput))>
                                      </div>
                                    </ForwardRef(FormControl)>
                                  </WithStyles(ForwardRef(FormControl))>
                                </ForwardRef(TextField)>
                              </WithStyles(ForwardRef(TextField))>
                              <WithStyles(ForwardRef(TextField))
                                error={false}
                                fullWidth={true}
                                inputProps={
                                  Object {
                                    "data-testid": "repeatPassword-field",
                                    "ref": [Function],
                                  }
                                }
                                label="auth:repeatPassword"
                                margin="normal"
                                name="repeatPassword"
                                type="password"
                                variant="outlined"
                              >
                                <ForwardRef(TextField)
                                  classes={
                                    Object {
                                      "root": "MuiTextField-root",
                                    }
                                  }
                                  error={false}
                                  fullWidth={true}
                                  inputProps={
                                    Object {
                                      "data-testid": "repeatPassword-field",
                                      "ref": [Function],
                                    }
                                  }
                                  label="auth:repeatPassword"
                                  margin="normal"
                                  name="repeatPassword"
                                  type="password"
                                  variant="outlined"
                                >
                                  <WithStyles(ForwardRef(FormControl))
                                    className="MuiTextField-root"
                                    color="primary"
                                    disabled={false}
                                    error={false}
                                    fullWidth={true}
                                    margin="normal"
                                    required={false}
                                    variant="outlined"
                                  >
                                    <ForwardRef(FormControl)
                                      className="MuiTextField-root"
                                      classes={
                                        Object {
                                          "fullWidth": "MuiFormControl-fullWidth",
                                          "marginDense": "MuiFormControl-marginDense",
                                          "marginNormal": "MuiFormControl-marginNormal",
                                          "root": "MuiFormControl-root",
                                        }
                                      }
                                      color="primary"
                                      disabled={false}
                                      error={false}
                                      fullWidth={true}
                                      margin="normal"
                                      required={false}
                                      variant="outlined"
                                    >
                                      <div
                                        className="MuiFormControl-root MuiTextField-root MuiFormControl-marginNormal MuiFormControl-fullWidth"
                                      >
                                        <WithStyles(ForwardRef(InputLabel))>
                                          <ForwardRef(InputLabel)
                                            classes={
                                              Object {
                                                "animated": "MuiInputLabel-animated",
                                                "asterisk": "MuiInputLabel-asterisk",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "filled": "MuiInputLabel-filled",
                                                "focused": "Mui-focused",
                                                "formControl": "MuiInputLabel-formControl",
                                                "marginDense": "MuiInputLabel-marginDense",
                                                "outlined": "MuiInputLabel-outlined",
                                                "required": "Mui-required",
                                                "root": "MuiInputLabel-root",
                                                "shrink": "MuiInputLabel-shrink",
                                              }
                                            }
                                          >
                                            <WithStyles(ForwardRef(FormLabel))
                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                              classes={
                                                Object {
                                                  "asterisk": "MuiInputLabel-asterisk",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "required": "Mui-required",
                                                }
                                              }
                                              data-shrink={false}
                                            >
                                              <ForwardRef(FormLabel)
                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                classes={
                                                  Object {
                                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "filled": "MuiFormLabel-filled",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "required": "Mui-required Mui-required",
                                                    "root": "MuiFormLabel-root",
                                                  }
                                                }
                                                data-shrink={false}
                                              >
                                                <label
                                                  className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                  data-shrink={false}
                                                >
                                                  auth:repeatPassword
                                                </label>
                                              </ForwardRef(FormLabel)>
                                            </WithStyles(ForwardRef(FormLabel))>
                                          </ForwardRef(InputLabel)>
                                        </WithStyles(ForwardRef(InputLabel))>
                                        <WithStyles(ForwardRef(OutlinedInput))
                                          autoFocus={false}
                                          fullWidth={true}
                                          inputProps={
                                            Object {
                                              "data-testid": "repeatPassword-field",
                                              "ref": [Function],
                                            }
                                          }
                                          label={
                                            <React.Fragment>
                                              auth:repeatPassword
                                            </React.Fragment>
                                          }
                                          multiline={false}
                                          name="repeatPassword"
                                          type="password"
                                        >
                                          <ForwardRef(OutlinedInput)
                                            autoFocus={false}
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                "disabled": "Mui-disabled",
                                                "error": "Mui-error",
                                                "focused": "Mui-focused",
                                                "input": "MuiOutlinedInput-input",
                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                "multiline": "MuiOutlinedInput-multiline",
                                                "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                "root": "MuiOutlinedInput-root",
                                              }
                                            }
                                            fullWidth={true}
                                            inputProps={
                                              Object {
                                                "data-testid": "repeatPassword-field",
                                                "ref": [Function],
                                              }
                                            }
                                            label={
                                              <React.Fragment>
                                                auth:repeatPassword
                                              </React.Fragment>
                                            }
                                            multiline={false}
                                            name="repeatPassword"
                                            type="password"
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              autoFocus={false}
                                              classes={
                                                Object {
                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                                  "disabled": "Mui-disabled",
                                                  "error": "Mui-error",
                                                  "focused": "Mui-focused",
                                                  "input": "MuiOutlinedInput-input",
                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                  "multiline": "MuiOutlinedInput-multiline",
                                                  "notchedOutline": null,
                                                  "root": "MuiOutlinedInput-root",
                                                }
                                              }
                                              fullWidth={true}
                                              inputComponent="input"
                                              inputProps={
                                                Object {
                                                  "data-testid": "repeatPassword-field",
                                                  "ref": [Function],
                                                }
                                              }
                                              multiline={false}
                                              name="repeatPassword"
                                              renderSuffix={[Function]}
                                              type="password"
                                            >
                                              <ForwardRef(InputBase)
                                                autoFocus={false}
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                                    "disabled": "Mui-disabled Mui-disabled",
                                                    "error": "Mui-error Mui-error",
                                                    "focused": "Mui-focused Mui-focused",
                                                    "formControl": "MuiInputBase-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                  }
                                                }
                                                fullWidth={true}
                                                inputComponent="input"
                                                inputProps={
                                                  Object {
                                                    "data-testid": "repeatPassword-field",
                                                    "ref": [Function],
                                                  }
                                                }
                                                multiline={false}
                                                name="repeatPassword"
                                                renderSuffix={[Function]}
                                                type="password"
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                  onClick={[Function]}
                                                >
                                                  <input
                                                    aria-invalid={false}
                                                    autoFocus={false}
                                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                                    data-testid="repeatPassword-field"
                                                    disabled={false}
                                                    name="repeatPassword"
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    required={false}
                                                    type="password"
                                                  />
                                                  <WithStyles(ForwardRef(NotchedOutline))
                                                    className="MuiOutlinedInput-notchedOutline"
                                                    label={
                                                      <React.Fragment>
                                                        auth:repeatPassword
                                                      </React.Fragment>
                                                    }
                                                    labelWidth={0}
                                                    notched={false}
                                                  >
                                                    <ForwardRef(NotchedOutline)
                                                      className="MuiOutlinedInput-notchedOutline"
                                                      classes={
                                                        Object {
                                                          "legend": "PrivateNotchedOutline-legend-2",
                                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-3",
                                                          "legendNotched": "PrivateNotchedOutline-legendNotched-4",
                                                          "root": "PrivateNotchedOutline-root-1",
                                                        }
                                                      }
                                                      label={
                                                        <React.Fragment>
                                                          auth:repeatPassword
                                                        </React.Fragment>
                                                      }
                                                      labelWidth={0}
                                                      notched={false}
                                                    >
                                                      <fieldset
                                                        aria-hidden={true}
                                                        className="PrivateNotchedOutline-root-1 MuiOutlinedInput-notchedOutline"
                                                      >
                                                        <legend
                                                          className="PrivateNotchedOutline-legendLabelled-3"
                                                        >
                                                          <span>
                                                            auth:repeatPassword
                                                          </span>
                                                        </legend>
                                                      </fieldset>
                                                    </ForwardRef(NotchedOutline)>
                                                  </WithStyles(ForwardRef(NotchedOutline))>
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(OutlinedInput)>
                                        </WithStyles(ForwardRef(OutlinedInput))>
                                      </div>
                                    </ForwardRef(FormControl)>
                                  </WithStyles(ForwardRef(FormControl))>
                                </ForwardRef(TextField)>
                              </WithStyles(ForwardRef(TextField))>
                              <WithStyles(ForwardRef(FormControlLabel))
                                control={
                                  <WithStyles(ForwardRef(Checkbox))
                                    color="primary"
                                    inputProps={
                                      Object {
                                        "data-testid": "checkbox",
                                      }
                                    }
                                    inputRef={[Function]}
                                    name="checked"
                                  />
                                }
                                label="auth:acceptTermsAndCondition"
                              >
                                <ForwardRef(FormControlLabel)
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "label": "MuiFormControlLabel-label",
                                      "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                      "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                      "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                      "root": "MuiFormControlLabel-root",
                                    }
                                  }
                                  control={
                                    <WithStyles(ForwardRef(Checkbox))
                                      color="primary"
                                      inputProps={
                                        Object {
                                          "data-testid": "checkbox",
                                        }
                                      }
                                      inputRef={[Function]}
                                      name="checked"
                                    />
                                  }
                                  label="auth:acceptTermsAndCondition"
                                >
                                  <label
                                    className="MuiFormControlLabel-root"
                                  >
                                    <WithStyles(ForwardRef(Checkbox))
                                      color="primary"
                                      inputProps={
                                        Object {
                                          "data-testid": "checkbox",
                                        }
                                      }
                                      inputRef={[Function]}
                                      name="checked"
                                    >
                                      <ForwardRef(Checkbox)
                                        classes={
                                          Object {
                                            "checked": "Mui-checked",
                                            "colorPrimary": "MuiCheckbox-colorPrimary",
                                            "colorSecondary": "MuiCheckbox-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "indeterminate": "MuiCheckbox-indeterminate",
                                            "root": "MuiCheckbox-root",
                                          }
                                        }
                                        color="primary"
                                        inputProps={
                                          Object {
                                            "data-testid": "checkbox",
                                          }
                                        }
                                        inputRef={[Function]}
                                        name="checked"
                                      >
                                        <WithStyles(ForwardRef(SwitchBase))
                                          checkedIcon={<Memo />}
                                          classes={
                                            Object {
                                              "checked": "Mui-checked",
                                              "disabled": "Mui-disabled",
                                              "root": "MuiCheckbox-root MuiCheckbox-colorPrimary",
                                            }
                                          }
                                          color="primary"
                                          icon={<Memo />}
                                          inputProps={
                                            Object {
                                              "data-indeterminate": false,
                                              "data-testid": "checkbox",
                                            }
                                          }
                                          inputRef={[Function]}
                                          name="checked"
                                          type="checkbox"
                                        >
                                          <ForwardRef(SwitchBase)
                                            checkedIcon={<Memo />}
                                            classes={
                                              Object {
                                                "checked": "PrivateSwitchBase-checked-6 Mui-checked",
                                                "disabled": "PrivateSwitchBase-disabled-7 Mui-disabled",
                                                "input": "PrivateSwitchBase-input-8",
                                                "root": "PrivateSwitchBase-root-5 MuiCheckbox-root MuiCheckbox-colorPrimary",
                                              }
                                            }
                                            color="primary"
                                            icon={<Memo />}
                                            inputProps={
                                              Object {
                                                "data-indeterminate": false,
                                                "data-testid": "checkbox",
                                              }
                                            }
                                            inputRef={[Function]}
                                            name="checked"
                                            type="checkbox"
                                          >
                                            <WithStyles(ForwardRef(IconButton))
                                              className="PrivateSwitchBase-root-5 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                              color="primary"
                                              component="span"
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <ForwardRef(IconButton)
                                                className="PrivateSwitchBase-root-5 MuiCheckbox-root MuiCheckbox-colorPrimary"
                                                classes={
                                                  Object {
                                                    "colorInherit": "MuiIconButton-colorInherit",
                                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                                    "edgeStart": "MuiIconButton-edgeStart",
                                                    "label": "MuiIconButton-label",
                                                    "root": "MuiIconButton-root",
                                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                                  }
                                                }
                                                color="primary"
                                                component="span"
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  centerRipple={true}
                                                  className="MuiIconButton-root PrivateSwitchBase-root-5 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                  component="span"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    centerRipple={true}
                                                    className="MuiIconButton-root PrivateSwitchBase-root-5 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="span"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <span
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-5 MuiCheckbox-root MuiCheckbox-colorPrimary MuiIconButton-colorPrimary"
                                                      onBlur={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      tabIndex={null}
                                                    >
                                                      <span
                                                        className="MuiIconButton-label"
                                                      >
                                                        <input
                                                          className="PrivateSwitchBase-input-8"
                                                          data-indeterminate={false}
                                                          data-testid="checkbox"
                                                          name="checked"
                                                          onChange={[Function]}
                                                          type="checkbox"
                                                        />
                                                        <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="MuiSvgIcon-root"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                      </span>
                                                      <WithStyles(memo)
                                                        center={true}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={true}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </span>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(IconButton)>
                                            </WithStyles(ForwardRef(IconButton))>
                                          </ForwardRef(SwitchBase)>
                                        </WithStyles(ForwardRef(SwitchBase))>
                                      </ForwardRef(Checkbox)>
                                    </WithStyles(ForwardRef(Checkbox))>
                                    <WithStyles(ForwardRef(Typography))
                                      className="MuiFormControlLabel-label"
                                      component="span"
                                    >
                                      <ForwardRef(Typography)
                                        className="MuiFormControlLabel-label"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        component="span"
                                      >
                                        <span
                                          className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                        >
                                          auth:acceptTermsAndCondition
                                        </span>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </label>
                                </ForwardRef(FormControlLabel)>
                              </WithStyles(ForwardRef(FormControlLabel))>
                              <div
                                className="submitButton"
                              >
                                <WithStyles(ForwardRef(Button))
                                  className="registerButton"
                                  color="primary"
                                  data-test="submit-button"
                                  data-testid="submit-button"
                                  disabled={false}
                                  type="submit"
                                  variant="contained"
                                >
                                  <ForwardRef(Button)
                                    className="registerButton"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiButton-colorInherit",
                                        "contained": "MuiButton-contained",
                                        "containedPrimary": "MuiButton-containedPrimary",
                                        "containedSecondary": "MuiButton-containedSecondary",
                                        "containedSizeLarge": "MuiButton-containedSizeLarge",
                                        "containedSizeSmall": "MuiButton-containedSizeSmall",
                                        "disableElevation": "MuiButton-disableElevation",
                                        "disabled": "Mui-disabled",
                                        "endIcon": "MuiButton-endIcon",
                                        "focusVisible": "Mui-focusVisible",
                                        "fullWidth": "MuiButton-fullWidth",
                                        "iconSizeLarge": "MuiButton-iconSizeLarge",
                                        "iconSizeMedium": "MuiButton-iconSizeMedium",
                                        "iconSizeSmall": "MuiButton-iconSizeSmall",
                                        "label": "MuiButton-label",
                                        "outlined": "MuiButton-outlined",
                                        "outlinedPrimary": "MuiButton-outlinedPrimary",
                                        "outlinedSecondary": "MuiButton-outlinedSecondary",
                                        "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                        "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                        "root": "MuiButton-root",
                                        "sizeLarge": "MuiButton-sizeLarge",
                                        "sizeSmall": "MuiButton-sizeSmall",
                                        "startIcon": "MuiButton-startIcon",
                                        "text": "MuiButton-text",
                                        "textPrimary": "MuiButton-textPrimary",
                                        "textSecondary": "MuiButton-textSecondary",
                                        "textSizeLarge": "MuiButton-textSizeLarge",
                                        "textSizeSmall": "MuiButton-textSizeSmall",
                                      }
                                    }
                                    color="primary"
                                    data-test="submit-button"
                                    data-testid="submit-button"
                                    disabled={false}
                                    type="submit"
                                    variant="contained"
                                  >
                                    <WithStyles(ForwardRef(ButtonBase))
                                      className="MuiButton-root MuiButton-contained registerButton MuiButton-containedPrimary"
                                      component="button"
                                      data-test="submit-button"
                                      data-testid="submit-button"
                                      disabled={false}
                                      focusRipple={true}
                                      focusVisibleClassName="Mui-focusVisible"
                                      type="submit"
                                    >
                                      <ForwardRef(ButtonBase)
                                        className="MuiButton-root MuiButton-contained registerButton MuiButton-containedPrimary"
                                        classes={
                                          Object {
                                            "disabled": "Mui-disabled",
                                            "focusVisible": "Mui-focusVisible",
                                            "root": "MuiButtonBase-root",
                                          }
                                        }
                                        component="button"
                                        data-test="submit-button"
                                        data-testid="submit-button"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName="Mui-focusVisible"
                                        type="submit"
                                      >
                                        <button
                                          className="MuiButtonBase-root MuiButton-root MuiButton-contained registerButton MuiButton-containedPrimary"
                                          data-test="submit-button"
                                          data-testid="submit-button"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex={0}
                                          type="submit"
                                        >
                                          <span
                                            className="MuiButton-label"
                                          >
                                            auth:registerButtonLabel
                                          </span>
                                          <WithStyles(memo)
                                            center={false}
                                          >
                                            <ForwardRef(TouchRipple)
                                              center={false}
                                              classes={
                                                Object {
                                                  "child": "MuiTouchRipple-child",
                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                  "ripple": "MuiTouchRipple-ripple",
                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                  "root": "MuiTouchRipple-root",
                                                }
                                              }
                                            >
                                              <span
                                                className="MuiTouchRipple-root"
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  component={null}
                                                  exit={true}
                                                />
                                              </span>
                                            </ForwardRef(TouchRipple)>
                                          </WithStyles(memo)>
                                        </button>
                                      </ForwardRef(ButtonBase)>
                                    </WithStyles(ForwardRef(ButtonBase))>
                                  </ForwardRef(Button)>
                                </WithStyles(ForwardRef(Button))>
                              </div>
                            </form>
                          </RegisterForm>
                        </div>
                      </ForwardRef(Grid)>
                    </WithStyles(ForwardRef(Grid))>
                  </div>
                </ForwardRef(Grid)>
              </WithStyles(ForwardRef(Grid))>
            </div>
          </div>
        </div>
      </ForwardRef(Grid)>
    </WithStyles(ForwardRef(Grid))>
  </AuthContainer>
</withI18nextTranslation(AuthContainer)>
`;
