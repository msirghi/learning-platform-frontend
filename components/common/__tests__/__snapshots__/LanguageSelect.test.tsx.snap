// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LanguageSelect component should match the snapshot 1`] = `
<LanguageSelect>
  <WithStyles(ForwardRef(IconButton))
    onClick={[Function]}
  >
    <ForwardRef(IconButton)
      classes={
        Object {
          "colorInherit": "MuiIconButton-colorInherit",
          "colorPrimary": "MuiIconButton-colorPrimary",
          "colorSecondary": "MuiIconButton-colorSecondary",
          "disabled": "Mui-disabled",
          "edgeEnd": "MuiIconButton-edgeEnd",
          "edgeStart": "MuiIconButton-edgeStart",
          "label": "MuiIconButton-label",
          "root": "MuiIconButton-root",
          "sizeSmall": "MuiIconButton-sizeSmall",
        }
      }
      onClick={[Function]}
    >
      <WithStyles(ForwardRef(ButtonBase))
        centerRipple={true}
        className="MuiIconButton-root"
        disabled={false}
        focusRipple={true}
        onClick={[Function]}
      >
        <ForwardRef(ButtonBase)
          centerRipple={true}
          className="MuiIconButton-root"
          classes={
            Object {
              "disabled": "Mui-disabled",
              "focusVisible": "Mui-focusVisible",
              "root": "MuiButtonBase-root",
            }
          }
          disabled={false}
          focusRipple={true}
          onClick={[Function]}
        >
          <button
            className="MuiButtonBase-root MuiIconButton-root"
            disabled={false}
            onBlur={[Function]}
            onClick={[Function]}
            onDragLeave={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex={0}
            type="button"
          >
            <span
              className="MuiIconButton-label"
            >
              <ForwardRef(LanguageIcon)
                color="primary"
              >
                <WithStyles(ForwardRef(SvgIcon))
                  color="primary"
                >
                  <ForwardRef(SvgIcon)
                    classes={
                      Object {
                        "colorAction": "MuiSvgIcon-colorAction",
                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                        "colorError": "MuiSvgIcon-colorError",
                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                        "root": "MuiSvgIcon-root",
                      }
                    }
                    color="primary"
                  >
                    <svg
                      aria-hidden={true}
                      className="MuiSvgIcon-root MuiSvgIcon-colorPrimary"
                      focusable="false"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zm6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56zM12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96zM4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2H4.26zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56zm2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8zM12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96zM14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2zm.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56zM16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2h-3.38z"
                      />
                    </svg>
                  </ForwardRef(SvgIcon)>
                </WithStyles(ForwardRef(SvgIcon))>
              </ForwardRef(LanguageIcon)>
            </span>
            <WithStyles(memo)
              center={true}
            >
              <ForwardRef(TouchRipple)
                center={true}
                classes={
                  Object {
                    "child": "MuiTouchRipple-child",
                    "childLeaving": "MuiTouchRipple-childLeaving",
                    "childPulsate": "MuiTouchRipple-childPulsate",
                    "ripple": "MuiTouchRipple-ripple",
                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                    "root": "MuiTouchRipple-root",
                  }
                }
              >
                <span
                  className="MuiTouchRipple-root"
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    component={null}
                    exit={true}
                  />
                </span>
              </ForwardRef(TouchRipple)>
            </WithStyles(memo)>
          </button>
        </ForwardRef(ButtonBase)>
      </WithStyles(ForwardRef(ButtonBase))>
    </ForwardRef(IconButton)>
  </WithStyles(ForwardRef(IconButton))>
  <WithStyles(ForwardRef(Menu))
    anchorEl={null}
    keepMounted={true}
    onClose={[Function]}
    open={false}
  >
    <ForwardRef(Menu)
      anchorEl={null}
      classes={
        Object {
          "list": "MuiMenu-list",
          "paper": "MuiMenu-paper",
        }
      }
      keepMounted={true}
      onClose={[Function]}
      open={false}
    >
      <WithStyles(ForwardRef(Popover))
        PaperProps={
          Object {
            "classes": Object {
              "root": "MuiMenu-paper",
            },
          }
        }
        anchorEl={null}
        anchorOrigin={
          Object {
            "horizontal": "left",
            "vertical": "top",
          }
        }
        getContentAnchorEl={[Function]}
        keepMounted={true}
        onClose={[Function]}
        onEntering={[Function]}
        open={false}
        transformOrigin={
          Object {
            "horizontal": "left",
            "vertical": "top",
          }
        }
        transitionDuration="auto"
      >
        <ForwardRef(Popover)
          PaperProps={
            Object {
              "classes": Object {
                "root": "MuiMenu-paper",
              },
            }
          }
          anchorEl={null}
          anchorOrigin={
            Object {
              "horizontal": "left",
              "vertical": "top",
            }
          }
          classes={
            Object {
              "paper": "MuiPopover-paper",
              "root": "MuiPopover-root",
            }
          }
          getContentAnchorEl={[Function]}
          keepMounted={true}
          onClose={[Function]}
          onEntering={[Function]}
          open={false}
          transformOrigin={
            Object {
              "horizontal": "left",
              "vertical": "top",
            }
          }
          transitionDuration="auto"
        >
          <ForwardRef(Modal)
            BackdropProps={
              Object {
                "invisible": true,
              }
            }
            className="MuiPopover-root"
            keepMounted={true}
            onClose={[Function]}
            open={false}
          >
            <ForwardRef(Portal)
              disablePortal={false}
            >
              <Portal
                containerInfo={
                  <body>
                    <div
                      aria-hidden="true"
                      class="MuiPopover-root"
                      role="presentation"
                      style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                    >
                      <div
                        data-test="sentinelStart"
                        tabindex="0"
                      />
                      <div
                        class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                        style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                        tabindex="-1"
                      >
                        <ul
                          class="MuiList-root MuiMenu-list MuiList-padding"
                          role="menu"
                          tabindex="-1"
                        >
                          <ul
                            class="MuiList-root MuiList-padding"
                            tabindex="0"
                          >
                            <div
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                              role="button"
                              tabindex="0"
                            >
                              English
                              <span
                                class="MuiTouchRipple-root"
                              />
                            </div>
                            <div
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                              role="button"
                              tabindex="0"
                            >
                              Русский
                              <span
                                class="MuiTouchRipple-root"
                              />
                            </div>
                          </ul>
                        </ul>
                      </div>
                      <div
                        data-test="sentinelEnd"
                        tabindex="0"
                      />
                    </div>
                  </body>
                }
              >
                <div
                  className="MuiPopover-root"
                  onKeyDown={[Function]}
                  role="presentation"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "fixed",
                      "right": 0,
                      "top": 0,
                      "visibility": "hidden",
                      "zIndex": 1300,
                    }
                  }
                >
                  <ForwardRef(SimpleBackdrop)
                    invisible={true}
                    onClick={[Function]}
                    open={false}
                  />
                  <Unstable_TrapFocus
                    disableAutoFocus={false}
                    disableEnforceFocus={false}
                    disableRestoreFocus={false}
                    getDoc={[Function]}
                    isEnabled={[Function]}
                    open={false}
                  >
                    <div
                      data-test="sentinelStart"
                      tabIndex={0}
                    />
                    <ForwardRef(Grow)
                      appear={true}
                      in={false}
                      onEnter={[Function]}
                      onEntering={[Function]}
                      onExited={[Function]}
                      tabIndex="-1"
                      timeout="auto"
                    >
                      <Transition
                        addEndListener={[Function]}
                        appear={true}
                        enter={true}
                        exit={true}
                        in={false}
                        mountOnEnter={false}
                        onEnter={[Function]}
                        onEntered={[Function]}
                        onEntering={[Function]}
                        onExit={[Function]}
                        onExited={[Function]}
                        onExiting={[Function]}
                        tabIndex="-1"
                        timeout={null}
                        unmountOnExit={false}
                      >
                        <WithStyles(ForwardRef(Paper))
                          className="MuiPopover-paper"
                          classes={
                            Object {
                              "root": "MuiMenu-paper",
                            }
                          }
                          elevation={8}
                          style={
                            Object {
                              "opacity": 0,
                              "transform": "scale(0.75, 0.5625)",
                              "visibility": "hidden",
                            }
                          }
                          tabIndex="-1"
                        >
                          <ForwardRef(Paper)
                            className="MuiPopover-paper"
                            classes={
                              Object {
                                "elevation0": "MuiPaper-elevation0",
                                "elevation1": "MuiPaper-elevation1",
                                "elevation10": "MuiPaper-elevation10",
                                "elevation11": "MuiPaper-elevation11",
                                "elevation12": "MuiPaper-elevation12",
                                "elevation13": "MuiPaper-elevation13",
                                "elevation14": "MuiPaper-elevation14",
                                "elevation15": "MuiPaper-elevation15",
                                "elevation16": "MuiPaper-elevation16",
                                "elevation17": "MuiPaper-elevation17",
                                "elevation18": "MuiPaper-elevation18",
                                "elevation19": "MuiPaper-elevation19",
                                "elevation2": "MuiPaper-elevation2",
                                "elevation20": "MuiPaper-elevation20",
                                "elevation21": "MuiPaper-elevation21",
                                "elevation22": "MuiPaper-elevation22",
                                "elevation23": "MuiPaper-elevation23",
                                "elevation24": "MuiPaper-elevation24",
                                "elevation3": "MuiPaper-elevation3",
                                "elevation4": "MuiPaper-elevation4",
                                "elevation5": "MuiPaper-elevation5",
                                "elevation6": "MuiPaper-elevation6",
                                "elevation7": "MuiPaper-elevation7",
                                "elevation8": "MuiPaper-elevation8",
                                "elevation9": "MuiPaper-elevation9",
                                "outlined": "MuiPaper-outlined",
                                "root": "MuiPaper-root MuiMenu-paper",
                                "rounded": "MuiPaper-rounded",
                              }
                            }
                            elevation={8}
                            style={
                              Object {
                                "opacity": 0,
                                "transform": "scale(0.75, 0.5625)",
                                "visibility": "hidden",
                              }
                            }
                            tabIndex="-1"
                          >
                            <div
                              className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                              style={
                                Object {
                                  "opacity": 0,
                                  "transform": "scale(0.75, 0.5625)",
                                  "visibility": "hidden",
                                }
                              }
                              tabIndex="-1"
                            >
                              <ForwardRef(MenuList)
                                actions={
                                  Object {
                                    "current": Object {
                                      "adjustStyleForScrollbar": [Function],
                                    },
                                  }
                                }
                                autoFocus={false}
                                autoFocusItem={false}
                                className="MuiMenu-list"
                                onKeyDown={[Function]}
                                variant="selectedMenu"
                              >
                                <WithStyles(ForwardRef(List))
                                  className="MuiMenu-list"
                                  onKeyDown={[Function]}
                                  role="menu"
                                  tabIndex={-1}
                                >
                                  <ForwardRef(List)
                                    className="MuiMenu-list"
                                    classes={
                                      Object {
                                        "dense": "MuiList-dense",
                                        "padding": "MuiList-padding",
                                        "root": "MuiList-root",
                                        "subheader": "MuiList-subheader",
                                      }
                                    }
                                    onKeyDown={[Function]}
                                    role="menu"
                                    tabIndex={-1}
                                  >
                                    <ul
                                      className="MuiList-root MuiMenu-list MuiList-padding"
                                      onKeyDown={[Function]}
                                      role="menu"
                                      tabIndex={-1}
                                    >
                                      <WithStyles(ForwardRef(List))
                                        key=".$.0"
                                        tabIndex={0}
                                      >
                                        <ForwardRef(List)
                                          classes={
                                            Object {
                                              "dense": "MuiList-dense",
                                              "padding": "MuiList-padding",
                                              "root": "MuiList-root",
                                              "subheader": "MuiList-subheader",
                                            }
                                          }
                                          tabIndex={0}
                                        >
                                          <ul
                                            className="MuiList-root MuiList-padding"
                                            tabIndex={0}
                                          >
                                            <WithStyles(ForwardRef(ListItem))
                                              button={true}
                                              key="en"
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(ListItem)
                                                button={true}
                                                classes={
                                                  Object {
                                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                    "button": "MuiListItem-button",
                                                    "container": "MuiListItem-container",
                                                    "dense": "MuiListItem-dense",
                                                    "disabled": "Mui-disabled",
                                                    "divider": "MuiListItem-divider",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "gutters": "MuiListItem-gutters",
                                                    "root": "MuiListItem-root",
                                                    "secondaryAction": "MuiListItem-secondaryAction",
                                                    "selected": "Mui-selected",
                                                  }
                                                }
                                                onClick={[Function]}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  component="div"
                                                  disabled={false}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="div"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                  >
                                                    <div
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      English
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </div>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(ListItem)>
                                            </WithStyles(ForwardRef(ListItem))>
                                            <WithStyles(ForwardRef(ListItem))
                                              button={true}
                                              key="ru"
                                              onClick={[Function]}
                                            >
                                              <ForwardRef(ListItem)
                                                button={true}
                                                classes={
                                                  Object {
                                                    "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                    "button": "MuiListItem-button",
                                                    "container": "MuiListItem-container",
                                                    "dense": "MuiListItem-dense",
                                                    "disabled": "Mui-disabled",
                                                    "divider": "MuiListItem-divider",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "gutters": "MuiListItem-gutters",
                                                    "root": "MuiListItem-root",
                                                    "secondaryAction": "MuiListItem-secondaryAction",
                                                    "selected": "Mui-selected",
                                                  }
                                                }
                                                onClick={[Function]}
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                  component="div"
                                                  disabled={false}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    component="div"
                                                    disabled={false}
                                                    focusVisibleClassName="Mui-focusVisible"
                                                    onClick={[Function]}
                                                  >
                                                    <div
                                                      aria-disabled={false}
                                                      className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      Русский
                                                      <WithStyles(memo)
                                                        center={false}
                                                      >
                                                        <ForwardRef(TouchRipple)
                                                          center={false}
                                                          classes={
                                                            Object {
                                                              "child": "MuiTouchRipple-child",
                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                              "ripple": "MuiTouchRipple-ripple",
                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                              "root": "MuiTouchRipple-root",
                                                            }
                                                          }
                                                        >
                                                          <span
                                                            className="MuiTouchRipple-root"
                                                          >
                                                            <TransitionGroup
                                                              childFactory={[Function]}
                                                              component={null}
                                                              exit={true}
                                                            />
                                                          </span>
                                                        </ForwardRef(TouchRipple)>
                                                      </WithStyles(memo)>
                                                    </div>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(ListItem)>
                                            </WithStyles(ForwardRef(ListItem))>
                                          </ul>
                                        </ForwardRef(List)>
                                      </WithStyles(ForwardRef(List))>
                                    </ul>
                                  </ForwardRef(List)>
                                </WithStyles(ForwardRef(List))>
                              </ForwardRef(MenuList)>
                            </div>
                          </ForwardRef(Paper)>
                        </WithStyles(ForwardRef(Paper))>
                      </Transition>
                    </ForwardRef(Grow)>
                    <div
                      data-test="sentinelEnd"
                      tabIndex={0}
                    />
                  </Unstable_TrapFocus>
                </div>
              </Portal>
            </ForwardRef(Portal)>
          </ForwardRef(Modal)>
        </ForwardRef(Popover)>
      </WithStyles(ForwardRef(Popover))>
    </ForwardRef(Menu)>
  </WithStyles(ForwardRef(Menu))>
</LanguageSelect>
`;
